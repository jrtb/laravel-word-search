name: Deploy Laravel to Bitnami Lightsail

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./laravel-word-search

    steps:
    - uses: actions/checkout@v3

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: mbstring, xml, ctype, iconv, intl, pdo_mysql, bcmath, zip
        
    - name: Copy .env
      run: php -r "file_exists('.env') || copy('.env.example', '.env');"
      
    - name: Set AWS credentials in .env
      run: |
        sed -i "s|AWS_ACCESS_KEY_ID=|AWS_ACCESS_KEY_ID=${{ secrets.LIGHTSAIL_AWS_ACCESS_KEY_ID }}|" .env
        sed -i "s|AWS_SECRET_ACCESS_KEY=|AWS_SECRET_ACCESS_KEY=${{ secrets.LIGHTSAIL_AWS_SECRET_ACCESS_KEY }}|" .env
        sed -i "s|AWS_DEFAULT_REGION=.*|AWS_DEFAULT_REGION=us-east-1|" .env
        sed -i "s|AWS_BUCKET=.*|AWS_BUCKET=sword.fairladymedia.com|" .env
      
    - name: Install Dependencies
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
      
    - name: Generate key
      run: php artisan key:generate
      
    - name: Directory Permissions
      run: chmod -R 777 storage bootstrap/cache

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.LIGHTSAIL_AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.LIGHTSAIL_AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Deploy to Lightsail
      env:
        INSTANCE_NAME: LAMP_PHP_8-1
      run: |
        # Write SSH key from secrets
        echo "${{ secrets.LIGHTSAIL_SSH_PRIVATE_KEY }}" > lightsail_key.pem
        chmod 600 lightsail_key.pem
        
        # Create deployment package
        zip -r deploy.zip . -x "vendor/*" "node_modules/*" "tests/*"
        
        # Get instance public IP
        INSTANCE_IP=$(aws lightsail get-instance --instance-name $INSTANCE_NAME --query 'instance.publicIpAddress' --output text)
        
        # Deploy using SSH
        scp -o StrictHostKeyChecking=no -i lightsail_key.pem deploy.zip bitnami@$INSTANCE_IP:/tmp/
        ssh -o StrictHostKeyChecking=no -i lightsail_key.pem bitnami@$INSTANCE_IP '
          # Create application directory if it doesnt exist
          sudo mkdir -p /opt/bitnami/apache2/htdocs/laravel-word-search &&
          sudo chown -R bitnami:daemon /opt/bitnami/apache2/htdocs/laravel-word-search &&
          
          # Unzip and set up application
          cd /opt/bitnami/apache2/htdocs/laravel-word-search &&
          sudo unzip -o /tmp/deploy.zip &&
          sudo rm /tmp/deploy.zip &&
          
          # Find composer and install dependencies
          if [ -f "/opt/bitnami/php/bin/composer" ]; then
            COMPOSER="/opt/bitnami/php/bin/composer"
          elif [ -f "/usr/local/bin/composer" ]; then
            COMPOSER="/usr/local/bin/composer"
          else
            # Install composer if not found
            curl -sS https://getcomposer.org/installer | sudo /opt/bitnami/php/bin/php -- --install-dir=/usr/local/bin --filename=composer
            COMPOSER="/usr/local/bin/composer"
          fi
          
          # Install dependencies using found composer
          sudo /opt/bitnami/php/bin/php $COMPOSER install --no-interaction --prefer-dist --optimize-autoloader &&
          
          # Set permissions
          sudo chown -R daemon:daemon storage bootstrap/cache &&
          sudo chmod -R 775 storage bootstrap/cache &&
          
          # Run Laravel commands with Bitnamis PHP
          sudo /opt/bitnami/php/bin/php artisan migrate --force &&
          sudo /opt/bitnami/php/bin/php artisan config:cache &&
          sudo /opt/bitnami/php/bin/php artisan route:cache &&
          sudo /opt/bitnami/php/bin/php artisan view:cache &&
          
          # Restart Apache
          sudo /opt/bitnami/ctlscript.sh restart apache'